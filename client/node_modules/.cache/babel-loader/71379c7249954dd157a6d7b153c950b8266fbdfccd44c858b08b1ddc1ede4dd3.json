{"ast":null,"code":"import { useThree, useFrame } from '@react-three/fiber';\nimport * as React from 'react';\nconst Helper = ({\n  type: helperConstructor,\n  args = []\n}) => {\n  const objectRef = React.useRef(null);\n  const helperRef = React.useRef();\n  const scene = useThree(state => state.scene);\n  React.useLayoutEffect(() => {\n    var _objectRef$current;\n    const parent = (_objectRef$current = objectRef.current) == null ? void 0 : _objectRef$current.parent;\n    if (!helperConstructor || !parent) return;\n    const helper = new helperConstructor(parent, ...args);\n    helperRef.current = helper;\n\n    // Prevent the helpers from blocking rays\n    helper.traverse(child => child.raycast = () => null);\n    scene.add(helper);\n    return () => {\n      helperRef.current = undefined;\n      scene.remove(helper);\n      helper.dispose == null || helper.dispose();\n    };\n  }, [scene, helperConstructor, ...args]);\n  useFrame(() => {\n    var _helperRef$current;\n    return void ((_helperRef$current = helperRef.current) == null || _helperRef$current.update == null ? void 0 : _helperRef$current.update());\n  });\n  return /*#__PURE__*/React.createElement(\"object3D\", {\n    ref: objectRef\n  });\n};\nexport { Helper };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}