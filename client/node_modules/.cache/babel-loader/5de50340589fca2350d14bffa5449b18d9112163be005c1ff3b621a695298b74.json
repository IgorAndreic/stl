{"ast":null,"code":"var _jsxFileName = \"D:\\\\project\\\\client\\\\src\\\\components\\\\TextToSTLForm.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport './css/TextToSTLForm.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TextToSTLForm = ({\n  setUrl\n}) => {\n  _s();\n  const [text, setText] = useState('');\n  const [fontSize, setFontSize] = useState(100);\n  const handleSubmit = async event => {\n    event.preventDefault();\n    try {\n      const response = await axios.post('http://localhost:8000/api/text3dmodels/', {\n        text,\n        font_size: fontSize\n      });\n      const id = response.data.id;\n      const generateResponse = await axios.post(`http://localhost:8000/api/text3dmodels/${id}/generate_stl/`);\n      const fileName = generateResponse.data.filename;\n      setUrl(`http://localhost:8000/media/${fileName}`);\n    } catch (error) {\n      console.error('Error generating STL file:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"text-to-stl-form\",\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"text-input\",\n        children: \"Text:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"text-input\",\n        type: \"text\",\n        value: text,\n        onChange: e => setText(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"font-size-input\",\n        children: \"Font Size:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"font-size-input\",\n        type: \"number\",\n        value: fontSize,\n        onChange: e => setFontSize(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Generate STL\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n};\n_s(TextToSTLForm, \"yKHS8oRolaQRi8yblfxgSl7BnaQ=\");\n_c = TextToSTLForm;\nexport default TextToSTLForm;\nvar _c;\n$RefreshReg$(_c, \"TextToSTLForm\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","TextToSTLForm","setUrl","_s","text","setText","fontSize","setFontSize","handleSubmit","event","preventDefault","response","post","font_size","id","data","generateResponse","fileName","filename","error","console","className","onSubmit","children","htmlFor","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","_c","$RefreshReg$"],"sources":["D:/project/client/src/components/TextToSTLForm.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport './css/TextToSTLForm.css';\r\n\r\nconst TextToSTLForm = ({ setUrl }) => {\r\n    const [text, setText] = useState('');\r\n    const [fontSize, setFontSize] = useState(100);\r\n\r\n    const handleSubmit = async (event) => {\r\n        event.preventDefault();\r\n        try {\r\n            const response = await axios.post('http://localhost:8000/api/text3dmodels/', { text, font_size: fontSize });\r\n            const id = response.data.id;\r\n            const generateResponse = await axios.post(`http://localhost:8000/api/text3dmodels/${id}/generate_stl/`);\r\n            const fileName = generateResponse.data.filename;\r\n            setUrl(`http://localhost:8000/media/${fileName}`);\r\n        } catch (error) {\r\n            console.error('Error generating STL file:', error);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <form className=\"text-to-stl-form\" onSubmit={handleSubmit}>\r\n            <div>\r\n                <label htmlFor=\"text-input\">Text:</label>\r\n                <input\r\n                    id=\"text-input\"\r\n                    type=\"text\"\r\n                    value={text}\r\n                    onChange={(e) => setText(e.target.value)}\r\n                />\r\n            </div>\r\n            <div>\r\n                <label htmlFor=\"font-size-input\">Font Size:</label>\r\n                <input\r\n                    id=\"font-size-input\"\r\n                    type=\"number\"\r\n                    value={fontSize}\r\n                    onChange={(e) => setFontSize(e.target.value)}\r\n                />\r\n            </div>\r\n            <button type=\"submit\">Generate STL</button>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default TextToSTLForm;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}