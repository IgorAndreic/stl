{"ast":null,"code":"var _jsxFileName = \"D:\\\\project\\\\client\\\\src\\\\components\\\\ModelSTL.jsx\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState, useEffect } from 'react';\nimport { Canvas, useFrame, useThree } from '@react-three/fiber';\nimport { OrbitControls } from '@react-three/drei';\nimport { STLLoader } from 'three/examples/jsm/loaders/STLLoader';\nimport * as THREE from 'three';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ModelSTL = ({\n  url\n}) => {\n  _s();\n  const ref = useRef();\n  const [geometry, setGeometry] = useState(null);\n  const {\n    camera\n  } = useThree();\n  useEffect(() => {\n    const loader = new STLLoader();\n    loader.load(url, geometry => {\n      geometry.center(); // Центрируем модель\n      setGeometry(geometry);\n\n      // Настройка камеры\n      const box = new THREE.Box3().setFromObject(new THREE.Mesh(geometry));\n      const size = box.getSize(new THREE.Vector3());\n      const maxDim = Math.max(size.x, size.y, size.z);\n      const fov = camera.fov * (Math.PI / 180);\n      let cameraZ = Math.abs(maxDim / 2 * Math.tan(fov * 2)); // Умножение на два увеличивает значение Z\n      cameraZ *= 1.5; // Увеличиваем значение Z для лучшего обзора\n\n      camera.position.set(0, 0, cameraZ);\n      camera.lookAt(0, 0, 0);\n    });\n  }, [url, camera]);\n  return /*#__PURE__*/_jsxDEV(Canvas, {\n    children: [/*#__PURE__*/_jsxDEV(\"ambientLight\", {\n      intensity: 0.5\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"spotLight\", {\n      position: [10, 10, 10],\n      angle: 0.15,\n      penumbra: 1\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"pointLight\", {\n      position: [-10, -10, -10]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), geometry && /*#__PURE__*/_jsxDEV(\"mesh\", {\n      geometry: geometry,\n      ref: ref,\n      scale: 1,\n      children: /*#__PURE__*/_jsxDEV(\"meshStandardMaterial\", {\n        color: 'orange'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(OrbitControls, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_s(ModelSTL, \"ZnlMd/a7LWPNM0GtIW+P9Yeqo1c=\", false, function () {\n  return [useThree];\n});\n_c = ModelSTL;\nexport default ModelSTL;\nvar _c;\n$RefreshReg$(_c, \"ModelSTL\");","map":{"version":3,"names":["React","useRef","useState","useEffect","Canvas","useFrame","useThree","OrbitControls","STLLoader","THREE","jsxDEV","_jsxDEV","ModelSTL","url","_s","ref","geometry","setGeometry","camera","loader","load","center","box","Box3","setFromObject","Mesh","size","getSize","Vector3","maxDim","Math","max","x","y","z","fov","PI","cameraZ","abs","tan","position","set","lookAt","children","intensity","fileName","_jsxFileName","lineNumber","columnNumber","angle","penumbra","scale","color","_c","$RefreshReg$"],"sources":["D:/project/client/src/components/ModelSTL.jsx"],"sourcesContent":["import React, { useRef, useState, useEffect } from 'react';\r\nimport { Canvas, useFrame, useThree } from '@react-three/fiber';\r\nimport { OrbitControls } from '@react-three/drei';\r\nimport { STLLoader } from 'three/examples/jsm/loaders/STLLoader';\r\nimport * as THREE from 'three';\r\n\r\nconst ModelSTL = ({ url }) => {\r\n  const ref = useRef();\r\n  const [geometry, setGeometry] = useState(null);\r\n  const { camera } = useThree();\r\n\r\n  useEffect(() => {\r\n    const loader = new STLLoader();\r\n    loader.load(url, (geometry) => {\r\n      geometry.center(); // Центрируем модель\r\n      setGeometry(geometry);\r\n\r\n      // Настройка камеры\r\n      const box = new THREE.Box3().setFromObject(new THREE.Mesh(geometry));\r\n      const size = box.getSize(new THREE.Vector3());\r\n      const maxDim = Math.max(size.x, size.y, size.z);\r\n      const fov = camera.fov * (Math.PI / 180);\r\n      let cameraZ = Math.abs(maxDim / 2 * Math.tan(fov * 2)); // Умножение на два увеличивает значение Z\r\n      cameraZ *= 1.5; // Увеличиваем значение Z для лучшего обзора\r\n\r\n      camera.position.set(0, 0, cameraZ);\r\n      camera.lookAt(0, 0, 0);\r\n    });\r\n  }, [url, camera]);\r\n\r\n  return (\r\n    <Canvas>\r\n      <ambientLight intensity={0.5} />\r\n      <spotLight position={[10, 10, 10]} angle={0.15} penumbra={1} />\r\n      <pointLight position={[-10, -10, -10]} />\r\n      {geometry && (\r\n        <mesh geometry={geometry} ref={ref} scale={1}>\r\n          <meshStandardMaterial color={'orange'} />\r\n        </mesh>\r\n      )}\r\n      <OrbitControls />\r\n    </Canvas>\r\n  );\r\n};\r\n\r\nexport default ModelSTL;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}