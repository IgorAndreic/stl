{"ast":null,"code":"var _jsxFileName = \"D:\\\\project\\\\client\\\\src\\\\components\\\\ModelSTL.jsx\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState, useEffect } from 'react';\nimport { Canvas, useFrame, useThree } from '@react-three/fiber';\nimport { OrbitControls } from '@react-three/drei';\nimport { STLLoader } from 'three/examples/jsm/loaders/STLLoader';\nimport * as THREE from 'three';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst STLModel = ({\n  url\n}) => {\n  _s();\n  const ref = useRef();\n  const {\n    camera\n  } = useThree();\n  const [geometry, setGeometry] = useState(null);\n  useEffect(() => {\n    const loader = new STLLoader();\n    loader.load(url, geometry => {\n      geometry.center(); // Центрируем модель\n      setGeometry(geometry);\n\n      // Настройка камеры\n      const box = new THREE.Box3().setFromObject(new THREE.Mesh(geometry));\n      const size = box.getSize(new THREE.Vector3());\n      const maxDim = Math.max(size.x, size.y, size.z);\n      const fov = camera.fov * (Math.PI / 180);\n      let cameraZ = Math.abs(maxDim / 2 / Math.tan(fov / 2)); // Умножение на два увеличивает значение Z\n      cameraZ *= 1.5; // Увеличиваем значение Z для лучшего обзора\n\n      camera.position.set(0, 0, cameraZ);\n      camera.lookAt(0, 0, 0);\n    });\n  }, [url, camera]);\n  useFrame((state, delta) => {\n    if (ref.current) {\n      ref.current.rotation.x += delta * 0.1;\n      ref.current.rotation.y += delta * 0.1;\n    }\n  });\n  if (!geometry) return null;\n  return /*#__PURE__*/_jsxDEV(\"mesh\", {\n    geometry: geometry,\n    ref: ref,\n    scale: 1,\n    castShadow: true,\n    receiveShadow: true,\n    children: /*#__PURE__*/_jsxDEV(\"meshStandardMaterial\", {\n      color: '#87CEFA',\n      metalness: 0.5,\n      roughness: 0.5\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 7\n  }, this);\n};\n_s(STLModel, \"xi5oahFcZniOJKQ07mssWVbDCno=\", false, function () {\n  return [useThree, useFrame];\n});\n_c = STLModel;\nconst ModelSTL = ({\n  url\n}) => {\n  return /*#__PURE__*/_jsxDEV(Canvas, {\n    shadows: true,\n    children: [/*#__PURE__*/_jsxDEV(\"ambientLight\", {\n      intensity: 0.5\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"spotLight\", {\n      position: [10, 10, 10],\n      angle: 0.15,\n      penumbra: 1,\n      castShadow: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"pointLight\", {\n      position: [-10, -10, -10],\n      intensity: 0.5\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(STLModel, {\n      url: url\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(OrbitControls, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 7\n  }, this);\n};\n_c2 = ModelSTL;\nexport default ModelSTL;\nvar _c, _c2;\n$RefreshReg$(_c, \"STLModel\");\n$RefreshReg$(_c2, \"ModelSTL\");","map":{"version":3,"names":["React","useRef","useState","useEffect","Canvas","useFrame","useThree","OrbitControls","STLLoader","THREE","jsxDEV","_jsxDEV","STLModel","url","_s","ref","camera","geometry","setGeometry","loader","load","center","box","Box3","setFromObject","Mesh","size","getSize","Vector3","maxDim","Math","max","x","y","z","fov","PI","cameraZ","abs","tan","position","set","lookAt","state","delta","current","rotation","scale","castShadow","receiveShadow","children","color","metalness","roughness","fileName","_jsxFileName","lineNumber","columnNumber","_c","ModelSTL","shadows","intensity","angle","penumbra","_c2","$RefreshReg$"],"sources":["D:/project/client/src/components/ModelSTL.jsx"],"sourcesContent":["import React, { useRef, useState, useEffect } from 'react';\r\nimport { Canvas, useFrame, useThree } from '@react-three/fiber';\r\nimport { OrbitControls } from '@react-three/drei';\r\nimport { STLLoader } from 'three/examples/jsm/loaders/STLLoader';\r\nimport * as THREE from 'three';\r\n\r\nconst STLModel = ({ url }) => {\r\n    const ref = useRef();\r\n    const { camera } = useThree();\r\n    const [geometry, setGeometry] = useState(null);\r\n\r\n    useEffect(() => {\r\n        const loader = new STLLoader();\r\n        loader.load(url, (geometry) => {\r\n            geometry.center(); // Центрируем модель\r\n            setGeometry(geometry);\r\n\r\n            // Настройка камеры\r\n            const box = new THREE.Box3().setFromObject(new THREE.Mesh(geometry));\r\n            const size = box.getSize(new THREE.Vector3());\r\n            const maxDim = Math.max(size.x, size.y, size.z);\r\n            const fov = camera.fov * (Math.PI / 180);\r\n            let cameraZ = Math.abs(maxDim / 2 / Math.tan(fov / 2)); // Умножение на два увеличивает значение Z\r\n            cameraZ *= 1.5; // Увеличиваем значение Z для лучшего обзора\r\n\r\n            camera.position.set(0, 0, cameraZ);\r\n            camera.lookAt(0, 0, 0);\r\n        });\r\n    }, [url, camera]);\r\n\r\n    useFrame((state, delta) => {\r\n        if (ref.current) {\r\n            ref.current.rotation.x += delta * 0.1;\r\n            ref.current.rotation.y += delta * 0.1;\r\n        }\r\n    });\r\n\r\n    if (!geometry) return null;\r\n\r\n    return (\r\n      <mesh geometry={geometry} ref={ref} scale={1} castShadow receiveShadow>\r\n          <meshStandardMaterial color={'#87CEFA'} metalness={0.5} roughness={0.5} />\r\n      </mesh>\r\n    );\r\n};\r\n\r\nconst ModelSTL = ({ url }) => {\r\n    return (\r\n      <Canvas shadows>\r\n          <ambientLight intensity={0.5} />\r\n          <spotLight position={[10, 10, 10]} angle={0.15} penumbra={1} castShadow />\r\n          <pointLight position={[-10, -10, -10]} intensity={0.5} />\r\n          <STLModel url={url} />\r\n          <OrbitControls />\r\n      </Canvas>\r\n    );\r\n};\r\n\r\nexport default ModelSTL;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}