{"ast":null,"code":"var _jsxFileName = \"D:\\\\project\\\\client\\\\src\\\\components\\\\ModelSTL.jsx\",\n  _s = $RefreshSig$();\n// src/components/ModelSTL.js\nimport React, { useEffect, useRef } from 'react';\nimport * as THREE from 'three';\nimport { STLLoader } from 'three/examples/jsm/loaders/STLLoader';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ModelSTL = ({\n  url,\n  normalMapUrl\n}) => {\n  _s();\n  const mountRef = useRef(null);\n  useEffect(() => {\n    const width = mountRef.current.clientWidth;\n    const height = mountRef.current.clientHeight;\n\n    // Scene setup\n    const scene = new THREE.Scene();\n    const camera = new THREE.PerspectiveCamera(75, width / height, 0.1, 1000);\n    const renderer = new THREE.WebGLRenderer({\n      antialias: true\n    });\n    renderer.setSize(width, height);\n    mountRef.current.appendChild(renderer.domElement);\n\n    // Orbit controls\n    const controls = new OrbitControls(camera, renderer.domElement);\n\n    // Lights\n    const ambientLight = new THREE.AmbientLight(0x404040, 2);\n    scene.add(ambientLight);\n    const directionalLight = new THREE.DirectionalLight(0xffffff, 1);\n    directionalLight.position.set(1, 1, 1).normalize();\n    scene.add(directionalLight);\n\n    // Load STL\n    const loader = new STLLoader();\n    loader.load(url, geometry => {\n      const material = new THREE.MeshStandardMaterial({\n        color: 0x606060\n      });\n      const mesh = new THREE.Mesh(geometry, material);\n      scene.add(mesh);\n\n      // Center the model\n      geometry.center();\n\n      // Fit camera to object\n      const bbox = new THREE.Box3().setFromObject(mesh);\n      const size = bbox.getSize(new THREE.Vector3());\n      const maxDim = Math.max(size.x, size.y, size.z);\n      const fov = camera.fov * (Math.PI / 180);\n      let cameraZ = Math.abs(maxDim / 4 * Math.tan(fov * 2));\n      camera.position.z = cameraZ;\n      const minZ = bbox.min.z;\n      const cameraToFarEdge = minZ < 0 ? -minZ + cameraZ : cameraZ - minZ;\n      camera.far = cameraToFarEdge * 3;\n      camera.updateProjectionMatrix();\n    });\n    camera.position.z = 5;\n\n    // Render loop\n    const animate = () => {\n      requestAnimationFrame(animate);\n      controls.update();\n      renderer.render(scene, camera);\n    };\n    animate();\n\n    // Cleanup on unmount\n    return () => {\n      mountRef.current.removeChild(renderer.domElement);\n    };\n  }, [url]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"stl-viewer\",\n    ref: mountRef,\n    style: {\n      width: '100%',\n      height: '500px'\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 12\n  }, this);\n};\n_s(ModelSTL, \"V9/qkEdV8GfsDZk7lMTA1T8g5Ps=\");\n_c = ModelSTL;\nexport default ModelSTL;\nvar _c;\n$RefreshReg$(_c, \"ModelSTL\");","map":{"version":3,"names":["React","useEffect","useRef","THREE","STLLoader","OrbitControls","jsxDEV","_jsxDEV","ModelSTL","url","normalMapUrl","_s","mountRef","width","current","clientWidth","height","clientHeight","scene","Scene","camera","PerspectiveCamera","renderer","WebGLRenderer","antialias","setSize","appendChild","domElement","controls","ambientLight","AmbientLight","add","directionalLight","DirectionalLight","position","set","normalize","loader","load","geometry","material","MeshStandardMaterial","color","mesh","Mesh","center","bbox","Box3","setFromObject","size","getSize","Vector3","maxDim","Math","max","x","y","z","fov","PI","cameraZ","abs","tan","minZ","min","cameraToFarEdge","far","updateProjectionMatrix","animate","requestAnimationFrame","update","render","removeChild","className","ref","style","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/project/client/src/components/ModelSTL.jsx"],"sourcesContent":["// src/components/ModelSTL.js\r\nimport React, { useEffect, useRef } from 'react';\r\nimport * as THREE from 'three';\r\nimport { STLLoader } from 'three/examples/jsm/loaders/STLLoader';\r\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';\r\n\r\nconst ModelSTL = ({ url, normalMapUrl }) => {\r\n    const mountRef = useRef(null);\r\n\r\n    useEffect(() => {\r\n        const width = mountRef.current.clientWidth;\r\n        const height = mountRef.current.clientHeight;\r\n\r\n        // Scene setup\r\n        const scene = new THREE.Scene();\r\n        const camera = new THREE.PerspectiveCamera(75, width / height, 0.1, 1000);\r\n        const renderer = new THREE.WebGLRenderer({ antialias: true });\r\n        renderer.setSize(width, height);\r\n        mountRef.current.appendChild(renderer.domElement);\r\n\r\n        // Orbit controls\r\n        const controls = new OrbitControls(camera, renderer.domElement);\r\n\r\n        // Lights\r\n        const ambientLight = new THREE.AmbientLight(0x404040, 2);\r\n        scene.add(ambientLight);\r\n\r\n        const directionalLight = new THREE.DirectionalLight(0xffffff, 1);\r\n        directionalLight.position.set(1, 1, 1).normalize();\r\n        scene.add(directionalLight);\r\n\r\n        // Load STL\r\n        const loader = new STLLoader();\r\n        loader.load(url, (geometry) => {\r\n            const material = new THREE.MeshStandardMaterial({ color: 0x606060 });\r\n            const mesh = new THREE.Mesh(geometry, material);\r\n            scene.add(mesh);\r\n\r\n            // Center the model\r\n            geometry.center();\r\n\r\n            // Fit camera to object\r\n            const bbox = new THREE.Box3().setFromObject(mesh);\r\n            const size = bbox.getSize(new THREE.Vector3());\r\n            const maxDim = Math.max(size.x, size.y, size.z);\r\n            const fov = camera.fov * (Math.PI / 180);\r\n            let cameraZ = Math.abs(maxDim / 4 * Math.tan(fov * 2));\r\n\r\n            camera.position.z = cameraZ;\r\n\r\n            const minZ = bbox.min.z;\r\n            const cameraToFarEdge = minZ < 0 ? -minZ + cameraZ : cameraZ - minZ;\r\n\r\n            camera.far = cameraToFarEdge * 3;\r\n            camera.updateProjectionMatrix();\r\n        });\r\n\r\n        camera.position.z = 5;\r\n\r\n        // Render loop\r\n        const animate = () => {\r\n            requestAnimationFrame(animate);\r\n            controls.update();\r\n            renderer.render(scene, camera);\r\n        };\r\n        animate();\r\n\r\n        // Cleanup on unmount\r\n        return () => {\r\n            mountRef.current.removeChild(renderer.domElement);\r\n        };\r\n    }, [url]);\r\n\r\n    return <div className=\"stl-viewer\" ref={mountRef} style={{ width: '100%', height: '500px' }} />;\r\n};\r\n\r\nexport default ModelSTL;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}